* Intro

参考自 [[https://github.com/bbatsov/emacs.d/blob/965d39c245bdbe79e88dd228756a9cf621670ac0/init.el][emacs.d/init.el at master · bbatsov/emacs.d]]

* 依赖

- [[https://github.com/BurntSushi/ripgrep][BurntSushi/ripgrep]] (consult-ripgrep)
- [[https://github.com/laishulu/macism][laishulu/macism]] (sis/mac)
- [[https://github.com/ryanoasis/nerd-fonts][ryanoasis/nerd-fonts]] (nerd-icons)
- [[https://wiki.archlinux.org/title/locate][locate - ArchWiki]] (consult-locate)

* 本地配置

- =lisp/init-local.el= 存放本地环境相关信息，比如各类 ip ，tramp 跳板等。
- gitignore 配置忽略

* 环境变量

不同主机通过配置环境变量自定义，目前所用环境变量:
- WRITING_HOME
- GTD_HOME

使用 [[https://github.com/purcell/exec-path-from-shell][purcell/exec-path-from-shell]] 共享用户 shell 环境变量。或者修改 LaunchAgents.

** Mac Gui 环境变量                                              :Deprecated:

新建 ~/Library/LaunchAgents/environment.plist:

#+BEGIN_SRC xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>Label</key>
  <string>my.startup</string>
  <key>ProgramArguments</key>
  <array>
    <string>sh</string>
    <string>-c</string>
    <string>
    launchctl setenv PRODUCTS_PATH /Users/mortimer/Projects/my_products
    launchctl setenv ANDROID_NDK_HOME /Applications/android-ndk
    launchctl setenv PATH $PATH:/Applications/gradle/bin
    </string>

  </array>
  <key>RunAtLoad</key>
  <true/>
</dict>
</plist>
#+END_SRC

#+begin_src shell
launchctl load ~/Library/LaunchAgents/environment.plist
launchctl start ~/Library/LaunchAgents/environment.plist
#+end_src

参考：[[https://stackoverflow.com/a/26586170/851344][Setting environment variables via launchd.conf no longer works in OS X Yosemite/El Capitan/macOS Sierra/Mojave?]]

* 开发

手动执行一次：
#+begin_src elisp
  (treesit-auto-install-all)
#+end_src

** lsp

*** python

需要安装 [[https://github.com/microsoft/pyright][pyright]]

启用 conda.el 需要 emacs 运行环境中找到环境变量:

- CONDA_EXE
- 满足 ~CONDA_EXE=$CONDA_HOME/bin/conda~

* roam

存放 ~org-roam-procotol~ 在对应操作系统上的 scheme-handler，其他细节见，[[https://www.orgroam.com/manual.html#Mac-OS][Org-roam User Manual#MacOS]]

确保 emacs 有作为 server 启动，通过判断变量 ~server-process~ 是否存在可以确定。

~server-start~ 启动服务。

** macOS

复制 ~assets/macOS/OrgProtocolClient.app~ 到目录 ~/Applications~ 。需要手动运行一遍，让 scheme-handler 注册生效。


** org-protocol.desktop


复制 ~assets/linux/org-protocol.desktop~  到目录 ~$HOME/.local/share/applications/~

执行一下代码设置 scheme-handler
#+begin_src shell
xdg-mime default org-protocol.desktop x-scheme-handler/org-protocol
#+end_src

** Chrome
- [X] 配置扩展 [[https://chrome.google.com/webstore/detail/logpjaacgmcbpdkdchjiaagddngobkck][Chrome Shortkeys]]
  - 捕获 To Read 网页
    - MacOS
      注意是 =gtd-capture://=
      快捷键：=ctrl+command+c=
      Run Javascript：
      #+begin_src js
        location.href='org-protocol://gtd-capture://r/'+
          encodeURIComponent(location.href)+'/'+
          encodeURIComponent(document.title)+'/'+
          encodeURIComponent(window.getSelection())
      #+end_src
    - Linux
      注意是 =gtd-capture:/=
      快捷键：=ctrl+alt+c=
      Run Javascript：
      #+begin_src js
        location.href='org-protocol://gtd-capture:/r/'+
          encodeURIComponent(location.href)+'/'+
          encodeURIComponent(document.title)+'/'+
          encodeURIComponent(window.getSelection())
      #+end_src
  - [X] org-roam-protocol 捕获网页
    快捷键：=ctrl+command+o= / =ctrl+alt+o=
    作用不大，只是提醒自己有这么一个功能而已
    #+begin_src js
      location.href =
          'org-protocol://roam-ref?template=r&ref='
          + encodeURIComponent(location.href)
          + '&title='
          + encodeURIComponent(document.title)
          + '&body='
          + encodeURIComponent(window.getSelection())
    #+end_src
- [X] Chrome 禁用打开外部链接提醒
  参考：https://www.reddit.com/r/emacs/comments/icjaie/orgprotocol_users_is_there_a_way_to_disable/
  可以通过 ~chrome://policy/~ 检查是否生效
  - macOS
    终端运行
    #+begin_src shell
      defaults write com.google.Chrome URLAllowlist -array-add -string 'org-protocol://*'
    #+end_src
  - linux
    - arch google-chrome: ~/etc/opt/chrome/policies/managed/org-protocol.json~
    - arch chromium: ~/etc/chromium/policies/managed/org-protocol.json~
    - ubuntu20.04 chromium: ~/etc/chromium-browser/policies/managed/org-protocol.json~
    #+begin_src js
      {
        "AutoLaunchProtocolsFromOrigins": [
          {
            "allowed_origins": [ "*" ],
            "protocol": "org-protocol"
          }
        ]
      }
    #+end_src
    #+begin_src shell
      sudo chmod 444 /etc/chromium-browser/policies/managed/org-protocol.json
    #+end_src
- [[https://mybrowseraddon.com/content-security-policy.html][CSP]] 部分网站的 CSP 规则导致 Shortkeys 的 Run JavaScript 无法执行。需要这个扩展强制允许
